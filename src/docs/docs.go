// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "huoyijie",
            "url": "https://huoyijie.cn",
            "email": "yijie.huo@foxmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/apps": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Show apps",
                "tags": [
                    "admin_app"
                ],
                "summary": "Show apps",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/admin.appRes"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a app",
                "tags": [
                    "admin_app"
                ],
                "summary": "Update a app",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "updateAppReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.updateAppReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/admin.appRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a app",
                "tags": [
                    "admin_app"
                ],
                "summary": "Add a app",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "addAppReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.addAppReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/admin.appRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/dashboard": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Show dashboard",
                "tags": [
                    "dashboard"
                ],
                "summary": "Show dashboard",
                "parameters": [
                    {
                        "enum": [
                            "staff",
                            "user"
                        ],
                        "type": "string",
                        "description": "staff",
                        "name": "category",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/admin.dashboardRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/departments": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a department",
                "tags": [
                    "admin_department"
                ],
                "summary": "Add a department",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "addDeptReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.addDeptReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/departments/levels": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a department level",
                "tags": [
                    "admin_department"
                ],
                "summary": "Add a department level",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "addDeptLevelReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.addDeptLevelReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/departments/staffs": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a staff to the department",
                "tags": [
                    "admin_department"
                ],
                "summary": "Add a staff to the department",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "addDeptStaffReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.addDeptStaffReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/groups": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Show groups",
                "tags": [
                    "admin_group"
                ],
                "summary": "Show groups",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "type",
                        "name": "type",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "appId",
                        "name": "appId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.PagingResponse-admin_groupRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a group",
                "tags": [
                    "admin_group"
                ],
                "summary": "Add a group",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "addGroupReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.addGroupReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/admin.groupRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/groups/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a group",
                "tags": [
                    "admin_group"
                ],
                "summary": "Update a group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "group id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "updateGroupReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.updateGroupReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/admin.groupRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/groupships": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Show groupships",
                "tags": [
                    "admin_groupship"
                ],
                "summary": "Show groupships",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "sub",
                        "name": "sub",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "dom",
                        "name": "dom",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a groupship",
                "tags": [
                    "admin_groupship"
                ],
                "summary": "Add a groupship",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "addGroupshipReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.addGroupshipReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a groupship",
                "tags": [
                    "admin_groupship"
                ],
                "summary": "Delete a groupship",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "sub",
                        "name": "sub",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "dom",
                        "name": "dom",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "g",
                        "name": "g",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/logs": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Show logs",
                "tags": [
                    "admin_logs"
                ],
                "summary": "Show logs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/admin.logRes"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/permissions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Show permissions",
                "tags": [
                    "admin_permissions"
                ],
                "summary": "Show permissions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "appId",
                        "name": "appId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/admin.permissionRes"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/policies": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Show policies",
                "tags": [
                    "admin_policy"
                ],
                "summary": "Show policies",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "g",
                        "name": "g",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "dom",
                        "name": "dom",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/admin.policyRes"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a policy",
                "tags": [
                    "admin_policy"
                ],
                "summary": "Add a policy",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "addPolicyReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.addPolicyReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a policy",
                "tags": [
                    "admin_policy"
                ],
                "summary": "Delete a policy",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "g",
                        "name": "g",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "dom",
                        "name": "dom",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "admin.dev/apps",
                        "description": "obj",
                        "name": "obj",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "GET",
                        "description": "act",
                        "name": "act",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/staffs": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Show staffs",
                "tags": [
                    "admin_staff"
                ],
                "summary": "Show staffs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.PagingResponse-admin_staffRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a staff",
                "tags": [
                    "admin_staff"
                ],
                "summary": "Add a staff",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "addStaffReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.addStaffReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/admin.staffRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/staffs/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a staff",
                "tags": [
                    "admin_staff"
                ],
                "summary": "Update a staff",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "staff id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "updateStaffReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.updateStaffReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/admin.staffRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/tokens": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Show tokens",
                "tags": [
                    "admin_token"
                ],
                "summary": "Show tokens",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.PagingResponse-admin_tokenRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a token",
                "tags": [
                    "admin_token"
                ],
                "summary": "Delete a token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/token/grant": {
            "post": {
                "description": "Generate token",
                "tags": [
                    "token"
                ],
                "summary": "Generate token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "locale(en, zh-CN)",
                        "name": "locale",
                        "in": "query"
                    },
                    {
                        "description": "request body",
                        "name": "grantReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/token.GrantReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/token.GrantRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/token/refresh": {
            "post": {
                "description": "Refresh token",
                "tags": [
                    "token"
                ],
                "summary": "Refresh token",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "refreshReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/token.refreshReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/token.GrantRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/token/revoke": {
            "post": {
                "description": "Revoke token",
                "tags": [
                    "token"
                ],
                "summary": "Revoke token",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "refreshReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/token.refreshReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ClientError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "admin.addAppReq": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "minLength": 6,
                    "example": "appmock"
                }
            }
        },
        "admin.addDeptLevelReq": {
            "type": "object",
            "required": [
                "deptId",
                "subDeptId"
            ],
            "properties": {
                "deptId": {
                    "type": "integer",
                    "minimum": 100000,
                    "example": 100000
                },
                "subDeptId": {
                    "type": "integer",
                    "minimum": 100000,
                    "example": 100001
                }
            }
        },
        "admin.addDeptReq": {
            "type": "object",
            "required": [
                "name",
                "owerId"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "minLength": 6,
                    "example": "A company"
                },
                "owerId": {
                    "type": "integer",
                    "minimum": 100000,
                    "example": 100000
                }
            }
        },
        "admin.addDeptStaffReq": {
            "type": "object",
            "required": [
                "deptId",
                "staffId"
            ],
            "properties": {
                "deptId": {
                    "type": "integer",
                    "minimum": 100000,
                    "example": 100000
                },
                "staffId": {
                    "type": "integer",
                    "minimum": 100000,
                    "example": 100000
                }
            }
        },
        "admin.addGroupReq": {
            "type": "object",
            "required": [
                "appId",
                "name",
                "type"
            ],
            "properties": {
                "appId": {
                    "type": "integer",
                    "minimum": 100000,
                    "example": 100000
                },
                "name": {
                    "type": "string",
                    "minLength": 2,
                    "example": "developer"
                },
                "type": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "admin.addGroupshipReq": {
            "type": "object",
            "required": [
                "dom",
                "g",
                "sub"
            ],
            "properties": {
                "dom": {
                    "type": "integer",
                    "minimum": 100000,
                    "example": 100000
                },
                "g": {
                    "type": "integer",
                    "minimum": 100000,
                    "example": 100000
                },
                "sub": {
                    "type": "integer",
                    "minimum": 100000,
                    "example": 100000
                }
            }
        },
        "admin.addPolicyReq": {
            "type": "object",
            "required": [
                "act",
                "dom",
                "g",
                "obj"
            ],
            "properties": {
                "act": {
                    "type": "string",
                    "example": "GET"
                },
                "dom": {
                    "type": "integer",
                    "minimum": 100000,
                    "example": 100000
                },
                "g": {
                    "type": "integer",
                    "minimum": 100000,
                    "example": 100000
                },
                "obj": {
                    "type": "string",
                    "minLength": 2,
                    "example": "admin.dev/apps"
                }
            }
        },
        "admin.addStaffReq": {
            "type": "object",
            "required": [
                "email",
                "phone"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "example@huoyijie.cn"
                },
                "phone": {
                    "type": "string",
                    "maxLength": 11,
                    "minLength": 11,
                    "example": "18555201314"
                }
            }
        },
        "admin.appRes": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "secret": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "admin.dashboardRes": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                }
            }
        },
        "admin.groupRes": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "appId": {
                    "type": "integer"
                },
                "appName": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "admin.logRes": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "appId": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "pathVars": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gin.Param"
                    }
                },
                "queryVars": {
                    "$ref": "#/definitions/url.Values"
                },
                "resource": {
                    "type": "string"
                },
                "staffId": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "admin.permissionRes": {
            "type": "object",
            "properties": {
                "acts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "needRoot": {
                    "type": "boolean"
                },
                "resource": {
                    "type": "string"
                }
            }
        },
        "admin.policyRes": {
            "type": "object",
            "properties": {
                "act": {
                    "type": "string"
                },
                "obj": {
                    "type": "string"
                }
            }
        },
        "admin.staffRes": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "createdAt": {
                    "type": "string"
                },
                "departure": {
                    "type": "boolean"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "super": {
                    "type": "boolean"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "admin.tokenRes": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "accountId": {
                    "type": "integer"
                },
                "appId": {
                    "type": "integer"
                },
                "appName": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "refresh_token": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "admin.updateAppReq": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "activeToggle": {
                    "type": "boolean",
                    "example": true
                },
                "id": {
                    "type": "integer",
                    "minimum": 100000,
                    "example": 100001
                },
                "resetSecret": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "admin.updateGroupReq": {
            "type": "object",
            "properties": {
                "activeToggle": {
                    "type": "boolean",
                    "example": false
                },
                "name": {
                    "type": "string",
                    "minLength": 2,
                    "example": "ceo"
                }
            }
        },
        "admin.updateStaffReq": {
            "type": "object",
            "properties": {
                "activeToggle": {
                    "type": "boolean",
                    "example": true
                },
                "departureToggle": {
                    "type": "boolean",
                    "example": false
                },
                "phone": {
                    "type": "string",
                    "maxLength": 11,
                    "minLength": 11,
                    "example": "18555201314"
                },
                "resetPassword": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "gin.Param": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "token.GrantReq": {
            "type": "object",
            "required": [
                "appId",
                "appSecret",
                "email",
                "password"
            ],
            "properties": {
                "appId": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 100000
                },
                "appSecret": {
                    "type": "string",
                    "minLength": 1,
                    "example": "123456"
                },
                "email": {
                    "type": "string",
                    "example": "admin@huoyijie.cn"
                },
                "password": {
                    "type": "string",
                    "minLength": 6,
                    "example": "123456"
                }
            }
        },
        "token.GrantRes": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "expires_in": {
                    "type": "integer"
                },
                "refresh_token": {
                    "type": "string"
                },
                "token_type": {
                    "type": "string"
                }
            }
        },
        "token.refreshReq": {
            "type": "object",
            "required": [
                "access_token",
                "refresh_token"
            ],
            "properties": {
                "access_token": {
                    "type": "string",
                    "minLength": 1
                },
                "refresh_token": {
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "url.Values": {
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            }
        },
        "web.ClientError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "web.PagingResponse-admin_groupRes": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/admin.groupRes"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "web.PagingResponse-admin_staffRes": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/admin.staffRes"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "web.PagingResponse-admin_tokenRes": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/admin.tokenRes"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Ink API",
	Description:      "This is ink server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
