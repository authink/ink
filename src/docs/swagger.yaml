basePath: /api/v1
consumes:
- application/json
definitions:
  admin.addAppReq:
    properties:
      name:
        example: appmock
        minLength: 6
        type: string
    required:
    - name
    type: object
  admin.addDeptLevelReq:
    properties:
      deptId:
        example: 100000
        minimum: 100000
        type: integer
      subDeptId:
        example: 100001
        minimum: 100000
        type: integer
    required:
    - deptId
    - subDeptId
    type: object
  admin.addDeptReq:
    properties:
      name:
        example: A company
        minLength: 6
        type: string
      owerId:
        example: 100000
        minimum: 100000
        type: integer
    required:
    - name
    - owerId
    type: object
  admin.addDeptStaffReq:
    properties:
      deptId:
        example: 100000
        minimum: 100000
        type: integer
      staffId:
        example: 100000
        minimum: 100000
        type: integer
    required:
    - deptId
    - staffId
    type: object
  admin.addGroupReq:
    properties:
      appId:
        example: 100000
        minimum: 100000
        type: integer
      name:
        example: developer
        minLength: 2
        type: string
      type:
        example: 1
        type: integer
    required:
    - appId
    - name
    - type
    type: object
  admin.addGroupshipReq:
    properties:
      dom:
        example: 100000
        minimum: 100000
        type: integer
      g:
        example: 100000
        minimum: 100000
        type: integer
      sub:
        example: 100000
        minimum: 100000
        type: integer
    required:
    - dom
    - g
    - sub
    type: object
  admin.addPolicyReq:
    properties:
      act:
        example: GET
        type: string
      dom:
        example: 100000
        minimum: 100000
        type: integer
      g:
        example: 100000
        minimum: 100000
        type: integer
      obj:
        example: admin.dev/apps
        minLength: 2
        type: string
    required:
    - act
    - dom
    - g
    - obj
    type: object
  admin.addStaffReq:
    properties:
      email:
        example: example@huoyijie.cn
        type: string
      phone:
        example: "18555201314"
        type: string
    required:
    - email
    - phone
    type: object
  admin.appRes:
    properties:
      active:
        type: boolean
      createdAt:
        type: string
      id:
        type: integer
      name:
        type: string
      secret:
        type: string
      updatedAt:
        type: string
    type: object
  admin.dashboardRes:
    properties:
      count:
        type: integer
    type: object
  admin.groupRes:
    properties:
      active:
        type: boolean
      appId:
        type: integer
      appName:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      name:
        type: string
      type:
        type: integer
      updatedAt:
        type: string
    type: object
  admin.logRes:
    properties:
      action:
        type: string
      appId:
        type: integer
      createdAt:
        type: string
      id:
        type: integer
      pathVars:
        items:
          $ref: '#/definitions/gin.Param'
        type: array
      queryVars:
        $ref: '#/definitions/url.Values'
      resource:
        type: string
      staffId:
        type: integer
      updatedAt:
        type: string
    type: object
  admin.permissionRes:
    properties:
      acts:
        items:
          type: string
        type: array
      name:
        type: string
      needRoot:
        type: boolean
      resource:
        type: string
    type: object
  admin.policyRes:
    properties:
      act:
        type: string
      obj:
        type: string
    type: object
  admin.staffRes:
    properties:
      active:
        type: boolean
      createdAt:
        type: string
      departure:
        type: boolean
      email:
        type: string
      id:
        type: integer
      password:
        type: string
      phone:
        type: string
      super:
        type: boolean
      updatedAt:
        type: string
    type: object
  admin.tokenRes:
    properties:
      access_token:
        type: string
      accountId:
        type: integer
      appId:
        type: integer
      appName:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      refresh_token:
        type: string
      updatedAt:
        type: string
    type: object
  admin.updateAppReq:
    properties:
      activeToggle:
        example: true
        type: boolean
      id:
        example: 100001
        minimum: 100000
        type: integer
      resetSecret:
        example: false
        type: boolean
    required:
    - id
    type: object
  admin.updateGroupReq:
    properties:
      activeToggle:
        example: false
        type: boolean
      name:
        example: ceo
        minLength: 2
        type: string
    type: object
  admin.updateStaffReq:
    properties:
      activeToggle:
        example: true
        type: boolean
      departureToggle:
        example: false
        type: boolean
      phone:
        example: "18555201314"
        maxLength: 11
        minLength: 11
        type: string
      resetPassword:
        example: false
        type: boolean
    type: object
  gin.Param:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  token.GrantReq:
    properties:
      appId:
        example: 100000
        minimum: 1
        type: integer
      appSecret:
        example: "123456"
        minLength: 1
        type: string
      email:
        example: admin@huoyijie.cn
        type: string
      password:
        example: "123456"
        minLength: 6
        type: string
    required:
    - appId
    - appSecret
    - email
    - password
    type: object
  token.GrantRes:
    properties:
      access_token:
        type: string
      expires_in:
        type: integer
      refresh_token:
        type: string
      token_type:
        type: string
    type: object
  token.refreshReq:
    properties:
      access_token:
        minLength: 1
        type: string
      refresh_token:
        minLength: 1
        type: string
    required:
    - access_token
    - refresh_token
    type: object
  url.Values:
    additionalProperties:
      items:
        type: string
      type: array
    type: object
  web.ClientError:
    properties:
      code:
        type: string
      message:
        type: string
    type: object
  web.PagingResponse-admin_groupRes:
    properties:
      items:
        items:
          $ref: '#/definitions/admin.groupRes'
        type: array
      limit:
        type: integer
      offset:
        type: integer
      total:
        type: integer
    type: object
  web.PagingResponse-admin_staffRes:
    properties:
      items:
        items:
          $ref: '#/definitions/admin.staffRes'
        type: array
      limit:
        type: integer
      offset:
        type: integer
      total:
        type: integer
    type: object
  web.PagingResponse-admin_tokenRes:
    properties:
      items:
        items:
          $ref: '#/definitions/admin.tokenRes'
        type: array
      limit:
        type: integer
      offset:
        type: integer
      total:
        type: integer
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: yijie.huo@foxmail.com
    name: huoyijie
    url: https://huoyijie.cn
  description: This is ink server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Ink API
  version: "1.0"
paths:
  /admin/apps:
    get:
      description: Show apps
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/admin.appRes'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.ClientError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/web.ClientError'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Show apps
      tags:
      - admin_app
    post:
      description: Add a app
      parameters:
      - description: request body
        in: body
        name: addAppReq
        required: true
        schema:
          $ref: '#/definitions/admin.addAppReq'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/admin.appRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.ClientError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.ClientError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/web.ClientError'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Add a app
      tags:
      - admin_app
    put:
      description: Update a app
      parameters:
      - description: request body
        in: body
        name: updateAppReq
        required: true
        schema:
          $ref: '#/definitions/admin.updateAppReq'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/admin.appRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.ClientError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.ClientError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/web.ClientError'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update a app
      tags:
      - admin_app
  /admin/dashboard:
    get:
      description: Show dashboard
      parameters:
      - description: staff
        enum:
        - staff
        - user
        in: query
        name: category
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/admin.dashboardRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.ClientError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.ClientError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/web.ClientError'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Show dashboard
      tags:
      - dashboard
  /admin/departments:
    post:
      description: Add a department
      parameters:
      - description: request body
        in: body
        name: addDeptReq
        required: true
        schema:
          $ref: '#/definitions/admin.addDeptReq'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.ClientError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.ClientError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/web.ClientError'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Add a department
      tags:
      - admin_department
  /admin/departments/levels:
    post:
      description: Add a department level
      parameters:
      - description: request body
        in: body
        name: addDeptLevelReq
        required: true
        schema:
          $ref: '#/definitions/admin.addDeptLevelReq'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.ClientError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.ClientError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/web.ClientError'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Add a department level
      tags:
      - admin_department
  /admin/departments/staffs:
    post:
      description: Add a staff to the department
      parameters:
      - description: request body
        in: body
        name: addDeptStaffReq
        required: true
        schema:
          $ref: '#/definitions/admin.addDeptStaffReq'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.ClientError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.ClientError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/web.ClientError'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Add a staff to the department
      tags:
      - admin_department
  /admin/groups:
    get:
      description: Show groups
      parameters:
      - description: type
        in: query
        name: type
        required: true
        type: integer
      - description: appId
        in: query
        name: appId
        required: true
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.PagingResponse-admin_groupRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.ClientError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.ClientError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/web.ClientError'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Show groups
      tags:
      - admin_group
    post:
      description: Add a group
      parameters:
      - description: request body
        in: body
        name: addGroupReq
        required: true
        schema:
          $ref: '#/definitions/admin.addGroupReq'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/admin.groupRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.ClientError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.ClientError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/web.ClientError'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Add a group
      tags:
      - admin_group
  /admin/groups/{id}:
    put:
      description: Update a group
      parameters:
      - description: group id
        in: path
        name: id
        required: true
        type: integer
      - description: request body
        in: body
        name: updateGroupReq
        required: true
        schema:
          $ref: '#/definitions/admin.updateGroupReq'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/admin.groupRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.ClientError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.ClientError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/web.ClientError'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update a group
      tags:
      - admin_group
  /admin/groupships:
    delete:
      description: Delete a groupship
      parameters:
      - description: sub
        in: query
        name: sub
        required: true
        type: integer
      - description: dom
        in: query
        name: dom
        required: true
        type: integer
      - description: g
        in: query
        name: g
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.ClientError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.ClientError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/web.ClientError'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete a groupship
      tags:
      - admin_groupship
    get:
      description: Show groupships
      parameters:
      - description: sub
        in: query
        name: sub
        required: true
        type: integer
      - description: dom
        in: query
        name: dom
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.ClientError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.ClientError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/web.ClientError'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Show groupships
      tags:
      - admin_groupship
    post:
      description: Add a groupship
      parameters:
      - description: request body
        in: body
        name: addGroupshipReq
        required: true
        schema:
          $ref: '#/definitions/admin.addGroupshipReq'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.ClientError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.ClientError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/web.ClientError'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Add a groupship
      tags:
      - admin_groupship
  /admin/logs:
    get:
      description: Show logs
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/admin.logRes'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.ClientError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.ClientError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/web.ClientError'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Show logs
      tags:
      - admin_logs
  /admin/permissions:
    get:
      description: Show permissions
      parameters:
      - description: appId
        in: query
        name: appId
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/admin.permissionRes'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.ClientError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.ClientError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/web.ClientError'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Show permissions
      tags:
      - admin_permissions
  /admin/policies:
    delete:
      description: Delete a policy
      parameters:
      - description: g
        in: query
        name: g
        required: true
        type: integer
      - description: dom
        in: query
        name: dom
        required: true
        type: integer
      - description: obj
        example: admin.dev/apps
        in: query
        name: obj
        required: true
        type: string
      - description: act
        example: GET
        in: query
        name: act
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.ClientError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.ClientError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/web.ClientError'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete a policy
      tags:
      - admin_policy
    get:
      description: Show policies
      parameters:
      - description: g
        in: query
        name: g
        required: true
        type: integer
      - description: dom
        in: query
        name: dom
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/admin.policyRes'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.ClientError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.ClientError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/web.ClientError'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Show policies
      tags:
      - admin_policy
    post:
      description: Add a policy
      parameters:
      - description: request body
        in: body
        name: addPolicyReq
        required: true
        schema:
          $ref: '#/definitions/admin.addPolicyReq'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.ClientError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.ClientError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/web.ClientError'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Add a policy
      tags:
      - admin_policy
  /admin/staffs:
    get:
      description: Show staffs
      parameters:
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.PagingResponse-admin_staffRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.ClientError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.ClientError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/web.ClientError'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Show staffs
      tags:
      - admin_staff
    post:
      description: Add a staff
      parameters:
      - description: request body
        in: body
        name: addStaffReq
        required: true
        schema:
          $ref: '#/definitions/admin.addStaffReq'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/admin.staffRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.ClientError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.ClientError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/web.ClientError'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Add a staff
      tags:
      - admin_staff
  /admin/staffs/{id}:
    put:
      description: Update a staff
      parameters:
      - description: staff id
        in: path
        name: id
        required: true
        type: integer
      - description: request body
        in: body
        name: updateStaffReq
        required: true
        schema:
          $ref: '#/definitions/admin.updateStaffReq'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/admin.staffRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.ClientError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.ClientError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/web.ClientError'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update a staff
      tags:
      - admin_staff
  /admin/tokens:
    delete:
      description: Delete a token
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.ClientError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.ClientError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/web.ClientError'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete a token
      tags:
      - admin_token
    get:
      description: Show tokens
      parameters:
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.PagingResponse-admin_tokenRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.ClientError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.ClientError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/web.ClientError'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Show tokens
      tags:
      - admin_token
  /token/grant:
    post:
      description: Generate token
      parameters:
      - description: locale(en, zh-CN)
        in: query
        name: locale
        type: string
      - description: request body
        in: body
        name: grantReq
        required: true
        schema:
          $ref: '#/definitions/token.GrantReq'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/token.GrantRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.ClientError'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Generate token
      tags:
      - token
  /token/refresh:
    post:
      description: Refresh token
      parameters:
      - description: request body
        in: body
        name: refreshReq
        required: true
        schema:
          $ref: '#/definitions/token.refreshReq'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/token.GrantRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.ClientError'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Refresh token
      tags:
      - token
  /token/revoke:
    post:
      description: Revoke token
      parameters:
      - description: request body
        in: body
        name: refreshReq
        required: true
        schema:
          $ref: '#/definitions/token.refreshReq'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.ClientError'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Revoke token
      tags:
      - token
produces:
- application/json
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
